<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddOrUpdateModalTitle" xml:space="preserve">
    <value>Add / Update</value>
    <comment>Global</comment>
  </data>
  <data name="ApplyFilter" xml:space="preserve">
    <value>Apply Filter</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="Beginning" xml:space="preserve">
    <value>Beginning</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="Between" xml:space="preserve">
    <value>Between</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="btnAddName" xml:space="preserve">
    <value>Create New</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="btnCurrencyUpdate" xml:space="preserve">
    <value>Update Currencies</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="btnEditName" xml:space="preserve">
    <value>Edit</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="btnGridExcelExport" xml:space="preserve">
    <value>Export to Excel</value>
    <comment>Global</comment>
  </data>
  <data name="btnRedirectName" xml:space="preserve">
    <value>Go to Record</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="btnRemoveName" xml:space="preserve">
    <value>Delete</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="btnReviewName" xml:space="preserve">
    <value>Review</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
    <comment>Global</comment>
  </data>
  <data name="CleanFilter" xml:space="preserve">
    <value>Clean Filter</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
    <comment>Global</comment>
  </data>
  <data name="Contains" xml:space="preserve">
    <value>Contains</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="DataIsLoading" xml:space="preserve">
    <value>Data Is Loading</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="DragAndDropTheColumns" xml:space="preserve">
    <value>Drag and drop the columns you want to group here</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="EndWith" xml:space="preserve">
    <value>End With</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="EnterAtLeastCharacters" xml:space="preserve">
    <value>You Must Enter At Least [charDef] Characters</value>
    <comment>Global</comment>
  </data>
  <data name="Equal" xml:space="preserve">
    <value>Equal</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="ErrorMessageJS" xml:space="preserve">
    <value>Operation Failed</value>
    <comment>General Message-JS-Swal</comment>
  </data>
  <data name="FailedAddRecord" xml:space="preserve">
    <value>Failed to Add Record</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="FailedAddRecords" xml:space="preserve">
    <value>Failed to Add Records</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="FailedUpdateRecord" xml:space="preserve">
    <value>Failed to Update Record</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="FluentAddressIsRequired" xml:space="preserve">
    <value>Address Is Required</value>
    <comment>Fluent Validation</comment>
  </data>
  <data name="FluentCityIsRequired" xml:space="preserve">
    <value>City Is Required</value>
    <comment>Fluent Validation</comment>
  </data>
  <data name="FluentCodeIsRequired" xml:space="preserve">
    <value>Code is required</value>
    <comment>Fluent Validation</comment>
  </data>
  <data name="FluentCompanyCodeMaxLength" xml:space="preserve">
    <value>Code Cannot Than Three Characters</value>
    <comment>Fluent Validation</comment>
  </data>
  <data name="FluentCountryIsRequired" xml:space="preserve">
    <value>Country Is Required</value>
    <comment>Fluent Validation</comment>
  </data>
  <data name="FluentCurrencyNotFoundTCBM" xml:space="preserve">
    <value>Enter Valid Exchange Rate Code</value>
    <comment>Fluent Validation</comment>
  </data>
  <data name="FluentCurrencyNotIncluded" xml:space="preserve">
    <value>Currency Type Should Be Included in the System</value>
    <comment>Fluent Validation</comment>
  </data>
  <data name="FluentDescriptionIsRequired" xml:space="preserve">
    <value>Description Is Required</value>
    <comment>Fluent Validation</comment>
  </data>
  <data name="FluentLanguageIDIsRequired" xml:space="preserve">
    <value>Language Is Required</value>
    <comment>Fluent Validation User</comment>
  </data>
  <data name="FluentNameIsRequired" xml:space="preserve">
    <value>Name Is Required</value>
    <comment>Fluent Validation</comment>
  </data>
  <data name="FluentObjectNotFound" xml:space="preserve">
    <value>Object Not Found</value>
    <comment>Fluent Validation</comment>
  </data>
  <data name="FluentObjectProtected" xml:space="preserve">
    <value>Object Is Protected</value>
    <comment>Fluent Validation</comment>
  </data>
  <data name="FluentShortNameIsRequired" xml:space="preserve">
    <value>Short Name Is Required</value>
    <comment>Fluent Validation</comment>
  </data>
  <data name="FluentTimezoneIDIsRequired" xml:space="preserve">
    <value>Timezone Is Required</value>
    <comment>Fluent Valdation User</comment>
  </data>
  <data name="FluentTypeIsRequired" xml:space="preserve">
    <value>Type Is Required</value>
    <comment>Fluent Validation</comment>
  </data>
  <data name="FollowingPage" xml:space="preserve">
    <value>On the following page</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="FromPreviousSection" xml:space="preserve">
    <value>Continuing from the previous section</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full Name</value>
    <comment>ProcessTemplate Page On JS</comment>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>Greater Than</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="GreaterThanOrEqual" xml:space="preserve">
    <value>Greater Than Or Equal</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="GridInfoText" xml:space="preserve">
    <value>Page {0} / {1} ({2} Item)</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="InfoMessageJS" xml:space="preserve">
    <value>Info</value>
    <comment>General Message-JS-Swal</comment>
  </data>
  <data name="jQuery_accept" xml:space="preserve">
    <value>Please enter a value with a valid extension</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_creditcard" xml:space="preserve">
    <value>Please enter a valid credit card number</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_date" xml:space="preserve">
    <value>Please enter a valid date</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_dateISO" xml:space="preserve">
    <value>Please enter a valid date (ISO)</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_digits" xml:space="preserve">
    <value>Please enter a valid digit</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_email" xml:space="preserve">
    <value>Please enter a valid email</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_equalTo" xml:space="preserve">
    <value>Please enter the same value again</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_max" xml:space="preserve">
    <value>Please enter a value equal to or less than {0}</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_maxlength" xml:space="preserve">
    <value>Please do not enter more than {0} characters</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_min" xml:space="preserve">
    <value>Please enter a value equal to or greater than {0}</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_minlength" xml:space="preserve">
    <value>Please enter at least {0} value(s)</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_number" xml:space="preserve">
    <value>Please enter a valid number</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_range" xml:space="preserve">
    <value>Please enter a value between {0} and {1}</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_rangelength" xml:space="preserve">
    <value>Please enter between {0} and {1} chars</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_remote" xml:space="preserve">
    <value>Please correct this field</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_required" xml:space="preserve">
    <value>This field is required !</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="jQuery_url" xml:space="preserve">
    <value>Please enter a valid URL</value>
    <comment>jQuery.validator.messages</comment>
  </data>
  <data name="Last" xml:space="preserve">
    <value>Last</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="LessThan" xml:space="preserve">
    <value>Less Than</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="LessThanOrEqual" xml:space="preserve">
    <value>Less Than Or Equal</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="ListEmpty" xml:space="preserve">
    <value>List is Empty</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading</value>
    <comment>Global</comment>
  </data>
  <data name="More" xml:space="preserve">
    <value>More</value>
    <comment>Global</comment>
  </data>
  <data name="MoreCharacters" xml:space="preserve">
    <value>more characters</value>
    <comment>Global</comment>
  </data>
  <data name="NoRecordFoundSpecifiedID" xml:space="preserve">
    <value>No Records Found with the Specified ID</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="NoRecordsFound" xml:space="preserve">
    <value>No Records Found</value>
    <comment>Global</comment>
  </data>
  <data name="NotContains" xml:space="preserve">
    <value>Not Contains</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="NotEqual" xml:space="preserve">
    <value>Not Equal</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
    <comment>Global</comment>
  </data>
  <data name="OnlySelectChar" xml:space="preserve">
    <value>You can only select [charDef]</value>
    <comment>Global</comment>
  </data>
  <data name="RecordAddedSuccess" xml:space="preserve">
    <value>Record Added Successfully</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="RecordDeleted" xml:space="preserve">
    <value>Record Deleted</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="RecordListed" xml:space="preserve">
    <value>The record is listed.</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="RecordNotViewed" xml:space="preserve">
    <value>Record Could Not Be Viewed</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="RecordsAdded" xml:space="preserve">
    <value>Records Added</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="RecordsDeleted" xml:space="preserve">
    <value>Records Deleted</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="RecordsFailedUpdate" xml:space="preserve">
    <value>Records Failed to Update</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="RecordsNotDeleted" xml:space="preserve">
    <value>Records Could Not Be Deleted</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="RecordsUpdated" xml:space="preserve">
    <value>Records Updated</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="RecordUpdated" xml:space="preserve">
    <value>Record Updated</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="RecordViewed" xml:space="preserve">
    <value>Record Viewed</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="RegistrationCannotRepeated" xml:space="preserve">
    <value>Registration Information Cannot be Repeated</value>
    <comment>EF-DAL-EfEntityRepository</comment>
  </data>
  <data name="RemoveAllItems" xml:space="preserve">
    <value>Remove All Items</value>
    <comment>Global</comment>
  </data>
  <data name="RemoveConfirmationMessageJS" xml:space="preserve">
    <value>Confirm The Deletion?</value>
    <comment>General Message-JS-Swal</comment>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
    <comment>Global</comment>
  </data>
  <data name="Searching" xml:space="preserve">
    <value>Searching</value>
    <comment>Global</comment>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
    <comment>Global</comment>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>Select All</value>
    <comment>Global</comment>
  </data>
  <data name="SelectRecord" xml:space="preserve">
    <value>Please select a record</value>
    <comment>Global</comment>
  </data>
  <data name="StartsWith" xml:space="preserve">
    <value>Starts With</value>
    <comment>dxDataGrid</comment>
  </data>
  <data name="SuccessMessageJS" xml:space="preserve">
    <value>Operation Successful</value>
    <comment>General Message-JS-Swal</comment>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
    <comment>ProcessTemplate Page On JS</comment>
  </data>
</root>